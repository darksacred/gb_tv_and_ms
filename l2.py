import numpy as np
from math import factorial
# 1.
print(f'1')
# Поиск кол-во благоприятных попаданий
def combinations(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))


n = 100  # Кол-во выстрелов
k = 85  # Кол-во необходимых попаданий в поиске
p = 0.8  # Шанс попадания стрелком в мишень
# Поиск по формуле Бернулли:
X = combinations(n, k) * (p ** k) * (1 - p) ** (n - k)
print(f'Шанс попадания 85 раз из 100: {round(X * 100, 2)}%')

# Шанс попадания: 4.81%

# 2.
print(f'2')
n = 5000 #Кол-во испытаний (включения 5000 лампочек)
m = 0 #Кол-во перегоревших лампочек в первый день
p = 0.0004 #Шанс перегорания в первый день
lambda_ = n * p
a = (lambda_**m / np.math.factorial(m)) * np.exp(-lambda_)
print(f'Шанс не перегорания в первый день: {round(a * 100, 2)}%')
n = 5000 #Кол-во испытаний (включения 5000 лампочек)
m = 2 #Кол-во перегоревших лампочек в первый день
p = 0.0004 #Шанс перегорания в первый день
lambda_ = n * p
a = (lambda_**m / np.math.factorial(m)) * np.exp(-lambda_)
print(f'Шанс перегорания двух в первый день: {round(a * 100, 2)}%')

# Шанс не перегорания в первый день: 13.53%
# Шанс перегорания двух в первый день: 27.07%

# 3.
print(f'3')
n = 144  # Кол-во подбрасываний
k = 70  # Кол-во выпаданий орла
p = 0.5  # Шанс выпадания 1/2
# Поиск по формуле Бернулли:
X = combinations(n, k) * (p ** k) * (1 - p) ** (n - k)
print(f'Шанс выпадания орла 70 раз: {round(X * 100, 2)}%')

# Шанс выпадания орла 70 раз: 6.28%

# 4.
print(f'4')
n = 10
b = 7
k = 2
n1 = 11
b1 = 9
c = combinations(b, k) #количество сочетаний белых шаров корзина 1
ct = combinations(n, k) #количество сочетаний 2 шаров корзина 1
c1 = combinations(b1, k) #количество сочетаний белых шаров корзина 2
c1t = combinations(n1, k) #количество сочетаний 2 шаров корзина 2
print(f'Шанс выпадания шаров когда все белые: {round((((c / ct) + (c1 / c1t)) - ((c / ct) * (c1 / c1t))) * 100, 2)}%')

# Шанс выпадания шаров когда все белые: 81.58%

a1 = (c + (combinations(b, 1) * combinations(n-b, 1))) / ct
a2 = ((combinations(b1, 1) * combinations(n1-b1, 1)) + c1) / c1t
a3 = (a1 + a2 - (a1 * a2)) * 100
print(f'Шанс выпадания шаров когда 2 белых: {round(a3, 2)}%')

# Шанс выпадания шаров когда 2 белые: 99.88%

a1 = (combinations(b, 1) * combinations(n-b, 1)) / ct
a2 = (combinations(b1, 1) * combinations(n1-b1, 1)) / c1t
a3 = (a1 + a2 - (a1 * a2)) * 100
print(f'Шанс выпадания шаров когда 1 белый: {round(a3, 2)}%')
# Шанс выпадания шаров когда 1 белый: 64.12%

